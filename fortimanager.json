{
    "appid": "3d1ce7b2-0064-4e9a-882b-a37584d1e4f7",
    "name": "FortiManager",
    "description": "FortiManager",
    "type": "network security",
    "product_vendor": "Fortinet",
    "logo": "logo_fortimanager.svg",
    "logo_dark": "logo_fortimanager_dark.svg",
    "product_name": "FortiManager",
    "python_version": "3",
    "product_version_regex": ".*",
    "publisher": "Splunk",
    "license": "Copyright (c) Splunk, 2023",
    "app_version": "1.0.0",
    "utctime_updated": "2023-08-07T15:56:23.202681Z",
    "package_name": "phantom_fortimanager",
    "main_module": "fortimanager_connector.py",
    "min_phantom_version": "10155.0.0.0",
    "app_wizard_version": "1.0.0",
    "configuration": {
        "host": {
            "description": "Host",
            "data_type": "string",
            "required": true,
            "order": 0
        },
        "user": {
            "description": "User",
            "data_type": "string",
            "order": 1
        },
        "password": {
            "description": "Password",
            "data_type": "password",
            "order": 2
        },
        "api_key": {
            "description": "API Key",
            "data_type": "password",
            "order": 3
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "identifier": "test_connectivity",
            "description": "Validate the asset configuration for connectivity using supplied configuration",
            "verbose": "",
            "type": "test",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "list address groups",
            "identifier": "list_address_groups",
            "description": "List global address groups",
            "verbose": "",
            "type": "investigate",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "global block ip",
            "identifier": "global_block_ip",
            "description": "Block global level ip addresses",
            "verbose": "",
            "type": "contain",
            "read_only": false,
            "parameters": {
                "policy_name": {
                    "description": "Policy Name",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                },
                "policy_type": {
                    "description": "Policy Type",
                    "data_type": "string",
                    "required": true,
                    "order": 1
                },
                "package": {
                    "description": "Package",
                    "data_type": "string",
                    "order": 2
                },
                "package_path": {
                    "description": "Package Path",
                    "data_type": "string",
                    "order": 3
                },
                "ip_address": {
                    "description": "IP Address",
                    "data_type": "string",
                    "order": 4
                }

            },
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "global unblock ip",
            "identifier": "global_unblock_ip",
            "description": "Unblock global level ip addresses",
            "verbose": "",
            "type": "contain",
            "read_only": false,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "block url",
            "identifier": "block_url",
            "description": "Block an URL",
            "verbose": "",
            "type": "contain",
            "read_only": false,
            "parameters": {
                "url": {
                    "description": "URL to block",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "url"
                    ],
                    "value_list": [],
                    "default": "",
                    "order": 0,
                    "name": "url"
                },
                "policy": {
                    "description": "Policy to Update",
                    "data_type": "string",
                    "required": false,
                    "primary": false,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 1,
                    "name": "policy"
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.url",
                    "data_type": "string",
                    "contains": [
                        "url"
                    ],
                    "column_name": "url",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.policy",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "policy",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        }
    ],
    "custom_made": true,
    "pip_dependencies": {
        "pypi": [
            {
                "module": "pyfmg"
            }
        ]
    },
    "pip39_dependencies": {
        "pypi": [
            {
                "module": "pyfmg"
            }
        ]
    }
}
